{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/idb/build/idb.js","webpack:///./node_modules/merge-images/dist/index.es2015.js","webpack:///./node_modules/hammerjs/hammer.js"],"names":["exports","nextTick","fn","args","Array","prototype","slice","call","arguments","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","global","factory","this","toArray","arr","promisifyRequest","request","Promise","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","p","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","set","val","proxyRequestMethods","Constructor","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","openDb","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","defaultOptions","format","quality","width","height","Canvas","crossOrigin","mergeImages","sources","options","assign","canvas","window","document","createElement","Image","images","map","source","constructor","src","img","onload","ctx","getContext","all","getSize","dim","Math","max","image","globalAlpha","opacity","drawImage","x","y","toDataURL","progressive","err","jpeg","exportName","VENDOR_PREFIXES","TEST_ELEMENT","TYPE_FUNCTION","round","abs","now","Date","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","isArray","each","iterator","i","hasOwnProperty","deprecate","message","deprecationMessage","e","stack","log","console","warn","target","TypeError","output","nextKey","extend","dest","merge","keys","inherit","child","base","childP","baseP","create","_super","boolOrFn","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","uniqueArray","key","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","v","clientX","clientY","p1","p2","props","sqrt","atan2","PI","start","end","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","normalizeSingleTouches","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","cleanTouchActions","actions","hasPanX","hasPanY","touchMap","cssSupports","CSS","supports","compute","update","touchAction","recognizers","recognizer","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","item","add","triggerDomEvent","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","stop","force","stopped","curRecognizer","existing","remove","on","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal"],"mappings":"2GAAAA,EAAQC,SAAW,SAAkBC,GACjC,IAAIC,EAAOC,MAAMC,UAAUC,MAAMC,KAAKC,WACtCL,EAAKM,QACLC,YAAW,WACPR,EAAGS,MAAM,KAAMR,KAChB,IAGPH,EAAQY,SAAWZ,EAAQa,KAC3Bb,EAAQc,SAAWd,EAAQe,MAAQ,UACnCf,EAAQgB,IAAM,EACdhB,EAAQiB,SAAU,EAClBjB,EAAQkB,IAAM,GACdlB,EAAQmB,KAAO,GAEfnB,EAAQoB,QAAU,SAAUC,GAC3B,MAAM,IAAIC,MAAM,8CAGjB,WACI,IACIC,EADAC,EAAM,IAEVxB,EAAQwB,IAAM,WAAc,OAAOA,GACnCxB,EAAQyB,MAAQ,SAAUC,GACjBH,IAAMA,EAAO,EAAQ,SAC1BC,EAAMD,EAAKI,QAAQD,EAAKF,IANhC,GAUAxB,EAAQ4B,KAAO5B,EAAQ6B,KACvB7B,EAAQ8B,MAAQ9B,EAAQ+B,OACxB/B,EAAQgC,OAAShC,EAAQiC,YACzBjC,EAAQkC,WAAa,aACrBlC,EAAQmC,SAAW,I,wBCjClB,SAAUC,EAAQC,GAC8CA,EAAQrC,IADzE,CAIEsC,GAAM,SAAUtC,GAAW,aAE3B,SAASuC,EAAQC,GACf,OAAOpC,MAAMC,UAAUC,MAAMC,KAAKiC,GAGpC,SAASC,EAAiBC,GACxB,OAAO,IAAIC,SAAQ,SAAShB,EAASiB,GACnCF,EAAQG,UAAY,WAClBlB,EAAQe,EAAQI,SAGlBJ,EAAQK,QAAU,WAChBH,EAAOF,EAAQM,WAKrB,SAASC,EAAqBC,EAAKC,EAAQhD,GACzC,IAAIuC,EACAU,EAAI,IAAIT,SAAQ,SAAShB,EAASiB,GACpCF,EAAUQ,EAAIC,GAAQxC,MAAMuC,EAAK/C,GACjCsC,EAAiBC,GAASW,KAAK1B,EAASiB,MAI1C,OADAQ,EAAEV,QAAUA,EACLU,EAGT,SAASE,EAA2BJ,EAAKC,EAAQhD,GAC/C,IAAIiD,EAAIH,EAAqBC,EAAKC,EAAQhD,GAC1C,OAAOiD,EAAEC,MAAK,SAASE,GACrB,GAAKA,EACL,OAAO,IAAIC,EAAOD,EAAOH,EAAEV,YAI/B,SAASe,EAAgBC,EAAYC,EAAYC,GAC/CA,EAAWC,SAAQ,SAASC,GAC1BC,OAAOC,eAAeN,EAAWrD,UAAWyD,EAAM,CAChDG,IAAK,WACH,OAAO3B,KAAKqB,GAAYG,IAE1BI,IAAK,SAASC,GACZ7B,KAAKqB,GAAYG,GAAQK,QAMjC,SAASC,EAAoBV,EAAYC,EAAYU,EAAaT,GAChEA,EAAWC,SAAQ,SAASC,GACpBA,KAAQO,EAAYhE,YAC1BqD,EAAWrD,UAAUyD,GAAQ,WAC3B,OAAOb,EAAqBX,KAAKqB,GAAaG,EAAMtD,gBAK1D,SAAS8D,EAAaZ,EAAYC,EAAYU,EAAaT,GACzDA,EAAWC,SAAQ,SAASC,GACpBA,KAAQO,EAAYhE,YAC1BqD,EAAWrD,UAAUyD,GAAQ,WAC3B,OAAOxB,KAAKqB,GAAYG,GAAMnD,MAAM2B,KAAKqB,GAAanD,gBAK5D,SAAS+D,EAA0Bb,EAAYC,EAAYU,EAAaT,GACtEA,EAAWC,SAAQ,SAASC,GACpBA,KAAQO,EAAYhE,YAC1BqD,EAAWrD,UAAUyD,GAAQ,WAC3B,OAAOR,EAA2BhB,KAAKqB,GAAaG,EAAMtD,gBAKhE,SAASgE,EAAMC,GACbnC,KAAKoC,OAASD,EAuBhB,SAASjB,EAAOmB,EAAQjC,GACtBJ,KAAKsC,QAAUD,EACfrC,KAAKuC,SAAWnC,EA+BlB,SAASoC,EAAYC,GACnBzC,KAAK0C,OAASD,EAuChB,SAASE,EAAYC,GACnB5C,KAAK6C,IAAMD,EACX5C,KAAK8C,SAAW,IAAIzC,SAAQ,SAAShB,EAASiB,GAC5CsC,EAAeG,WAAa,WAC1B1D,KAEFuD,EAAenC,QAAU,WACvBH,EAAOsC,EAAelC,QAExBkC,EAAeI,QAAU,WACvB1C,EAAOsC,EAAelC,WAkB5B,SAASuC,EAAUC,EAAIC,EAAYC,GACjCpD,KAAKqD,IAAMH,EACXlD,KAAKmD,WAAaA,EAClBnD,KAAKoD,YAAc,IAAIT,EAAYS,GAkBrC,SAASE,EAAGJ,GACVlD,KAAKqD,IAAMH,EA6Db,SAASK,EAAOxE,EAAMyE,EAASC,GAC7B,IAAI3C,EAAIH,EAAqB+C,UAAW,OAAQ,CAAC3E,EAAMyE,IACnDpD,EAAUU,EAAEV,QAUhB,OARIA,IACFA,EAAQuD,gBAAkB,SAASC,GAC7BH,GACFA,EAAgB,IAAIR,EAAU7C,EAAQI,OAAQoD,EAAMT,WAAY/C,EAAQgD,gBAKvEtC,EAAEC,MAAK,SAASmC,GACrB,OAAO,IAAII,EAAGJ,MAIlB,SAASW,EAAS9E,GAChB,OAAO4B,EAAqB+C,UAAW,iBAAkB,CAAC3E,IA9N5DoC,EAAgBe,EAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFJ,EAAoBI,EAAO,SAAU4B,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGF7B,EAA0BC,EAAO,SAAU4B,SAAU,CACnD,aACA,kBAQF3C,EAAgBD,EAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFY,EAAoBZ,EAAQ,UAAW6C,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsBxC,SAAQ,SAASyC,GACvDA,KAAcD,UAAUhG,YAC9BmD,EAAOnD,UAAUiG,GAAc,WAC7B,IAAI3B,EAASrC,KACTnC,EAAOK,UACX,OAAOmC,QAAQhB,UAAU0B,MAAK,WAE5B,OADAsB,EAAOC,QAAQ0B,GAAY3F,MAAMgE,EAAOC,QAASzE,GAC1CsC,EAAiBkC,EAAOE,UAAUxB,MAAK,SAASE,GACrD,GAAKA,EACL,OAAO,IAAIC,EAAOD,EAAOoB,EAAOE,qBAUxCC,EAAYzE,UAAUkG,YAAc,WAClC,OAAO,IAAI/B,EAAMlC,KAAK0C,OAAOuB,YAAY5F,MAAM2B,KAAK0C,OAAQxE,aAG9DsE,EAAYzE,UAAUoE,MAAQ,WAC5B,OAAO,IAAID,EAAMlC,KAAK0C,OAAOP,MAAM9D,MAAM2B,KAAK0C,OAAQxE,aAGxDiD,EAAgBqB,EAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFV,EAAoBU,EAAa,SAAU0B,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGFjC,EAA0BO,EAAa,SAAU0B,eAAgB,CAC/D,aACA,kBAGFlC,EAAaQ,EAAa,SAAU0B,eAAgB,CAClD,gBAkBFvB,EAAY5E,UAAUoG,YAAc,WAClC,OAAO,IAAI3B,EAAYxC,KAAK6C,IAAIsB,YAAY9F,MAAM2B,KAAK6C,IAAK3E,aAG9DiD,EAAgBwB,EAAa,MAAO,CAClC,mBACA,SAGFX,EAAaW,EAAa,MAAOyB,eAAgB,CAC/C,UASFnB,EAAUlF,UAAUsG,kBAAoB,WACtC,OAAO,IAAI7B,EAAYxC,KAAKqD,IAAIgB,kBAAkBhG,MAAM2B,KAAKqD,IAAKnF,aAGpEiD,EAAgB8B,EAAW,MAAO,CAChC,OACA,UACA,qBAGFjB,EAAaiB,EAAW,MAAOqB,YAAa,CAC1C,oBACA,UAOFhB,EAAGvF,UAAUqF,YAAc,WACzB,OAAO,IAAIT,EAAY3C,KAAKqD,IAAID,YAAY/E,MAAM2B,KAAKqD,IAAKnF,aAG9DiD,EAAgBmC,EAAI,MAAO,CACzB,OACA,UACA,qBAGFtB,EAAasB,EAAI,MAAOgB,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiB/C,SAAQ,SAASgD,GAC/C,CAAC/B,EAAaN,GAAOX,SAAQ,SAASQ,GAE9BwC,KAAYxC,EAAYhE,YAE9BgE,EAAYhE,UAAUwG,EAASC,QAAQ,OAAQ,YAAc,WAC3D,IAAI3G,EAAOoC,EAAQ/B,WACfuG,EAAW5G,EAAKA,EAAK6G,OAAS,GAC9BC,EAAe3E,KAAK0C,QAAU1C,KAAKoC,OACnChC,EAAUuE,EAAaJ,GAAUlG,MAAMsG,EAAc9G,EAAKG,MAAM,GAAI,IACxEoC,EAAQG,UAAY,WAClBkE,EAASrE,EAAQI,iBAOzB,CAAC0B,EAAOM,GAAajB,SAAQ,SAASQ,GAChCA,EAAYhE,UAAU6G,SAC1B7C,EAAYhE,UAAU6G,OAAS,SAASC,EAAOC,GAC7C,IAAIC,EAAW/E,KACXgF,EAAQ,GAEZ,OAAO,IAAI3E,SAAQ,SAAShB,GAC1B0F,EAASE,cAAcJ,GAAO,SAASxC,GAChCA,GAIL2C,EAAME,KAAK7C,EAAOpB,YAEJkE,IAAVL,GAAuBE,EAAMN,QAAUI,EAI3CzC,EAAO+C,WAHL/F,EAAQ2F,IANR3F,EAAQ2F,cAoClBtH,EAAQ6F,OAASA,EACjB7F,EAAQmG,SAAWA,EAEnBpC,OAAOC,eAAehE,EAAS,aAAc,CAAEuD,OAAO,Q,kCCxTxD,IAAIoE,EAAiB,CACpBC,OAAQ,YACRC,QAAS,IACTC,WAAOL,EACPM,YAAQN,EACRO,YAAQP,EACRQ,iBAAaR,GAIVS,EAAc,SAAUC,EAASC,GAIpC,YAHiB,IAAZD,IAAqBA,EAAU,SACnB,IAAZC,IAAqBA,EAAU,IAE7B,IAAIzF,SAAQ,SAAUhB,GAC7ByG,EAAUrE,OAAOsE,OAAO,GAAIV,EAAgBS,GAG5C,IAAIE,EAASF,EAAQJ,OAAS,IAAII,EAAQJ,OAAWO,OAAOC,SAASC,cAAc,UAC/EC,EAAQN,EAAQJ,OAASI,EAAQJ,OAAOU,MAAQH,OAAOG,MACvDN,EAAQJ,SACXI,EAAQP,SAAW,KAIpB,IAAIc,EAASR,EAAQS,KAAI,SAAUC,GAAU,OAAO,IAAIlG,SAAQ,SAAUhB,EAASiB,GAElD,WAA5BiG,EAAOC,YAAYzH,OACtBwH,EAAS,CAAEE,IAAKF,IAIjB,IAAIG,EAAM,IAAIN,EACdM,EAAIf,YAAcG,EAAQH,YAC1Be,EAAIjG,QAAU,WAAc,OAAOH,EAAO,IAAItB,MAAM,yBACpD0H,EAAIC,OAAS,WAAc,OAAOtH,EAAQoC,OAAOsE,OAAO,GAAIQ,EAAQ,CAAEG,IAAKA,MAC3EA,EAAID,IAAMF,EAAOE,UAIdG,EAAMZ,EAAOa,WAAW,MAG5BxH,EAAQgB,QAAQyG,IAAIT,GAClBtF,MAAK,SAAUsF,GAEf,IAAIU,EAAU,SAAUC,GAAO,OAAOlB,EAAQkB,IAAQC,KAAKC,IAAI7I,MAAM4I,KAAMZ,EAAOC,KAAI,SAAUa,GAAS,OAAOA,EAAMT,IAAIM,QAU1H,OATAhB,EAAOR,MAAQuB,EAAQ,SACvBf,EAAOP,OAASsB,EAAQ,UAGxBV,EAAO9E,SAAQ,SAAU4F,GAExB,OADAP,EAAIQ,YAAcD,EAAME,QAAUF,EAAME,QAAU,EAC3CT,EAAIU,UAAUH,EAAMT,IAAKS,EAAMI,GAAK,EAAGJ,EAAMK,GAAK,MAGtD1B,EAAQJ,QAA6B,eAAnBI,EAAQR,OAEtB,IAAIjF,SAAQ,SAAUhB,GAC5B2G,EAAOyB,UAAU3B,EAAQR,OAAQ,CAChCC,QAASO,EAAQP,QACjBmC,aAAa,IACX,SAAUC,EAAKC,GACjB,GAAID,EACH,MAAMA,EAEPtI,EAAQuI,SAMJ5B,EAAOyB,UAAU3B,EAAQR,OAAQQ,EAAQP,iBAKpC,U,qBC9Ef;;;;;qCAKA,SAAUU,EAAQC,EAAU2B,EAAY1C,GACtC,aAEF,IA+FIY,EA/FA+B,EAAkB,CAAC,GAAI,SAAU,MAAO,KAAM,KAAM,KACpDC,EAAe7B,EAASC,cAAc,OAEtC6B,EAAgB,WAEhBC,EAAQhB,KAAKgB,MACbC,EAAMjB,KAAKiB,IACXC,EAAMC,KAAKD,IASf,SAASE,EAAkBzK,EAAI0K,EAASC,GACpC,OAAOnK,WAAWoK,EAAO5K,EAAI2K,GAAUD,GAY3C,SAASG,EAAeC,EAAK9K,EAAI2K,GAC7B,QAAIzK,MAAM6K,QAAQD,KACdE,EAAKF,EAAKH,EAAQ3K,GAAK2K,IAChB,GAWf,SAASK,EAAKhI,EAAKiI,EAAUN,GACzB,IAAIO,EAEJ,GAAKlI,EAIL,GAAIA,EAAIW,QACJX,EAAIW,QAAQsH,EAAUN,QACnB,GAAI3H,EAAI8D,SAAWS,EAAW,CACjC2D,EAAI,EACJ,MAAOA,EAAIlI,EAAI8D,OACXmE,EAAS5K,KAAKsK,EAAS3H,EAAIkI,GAAIA,EAAGlI,GAClCkI,SAGJ,IAAKA,KAAKlI,EACNA,EAAImI,eAAeD,IAAMD,EAAS5K,KAAKsK,EAAS3H,EAAIkI,GAAIA,EAAGlI,GAYvE,SAASoI,EAAUnI,EAAQ9B,EAAMkK,GAC7B,IAAIC,EAAqB,sBAAwBnK,EAAO,KAAOkK,EAAU,SACzE,OAAO,WACH,IAAIE,EAAI,IAAInK,MAAM,mBACdoK,EAAQD,GAAKA,EAAEC,MAAQD,EAAEC,MAAM5E,QAAQ,kBAAmB,IACzDA,QAAQ,cAAe,IACvBA,QAAQ,6BAA8B,kBAAoB,sBAE3D6E,EAAMpD,EAAOqD,UAAYrD,EAAOqD,QAAQC,MAAQtD,EAAOqD,QAAQD,KAInE,OAHIA,GACAA,EAAIpL,KAAKgI,EAAOqD,QAASJ,EAAoBE,GAE1CvI,EAAOxC,MAAM2B,KAAM9B,YAa9B6H,EADyB,oBAAlBtE,OAAOsE,OACL,SAAgByD,GACrB,GAAIA,IAAWrE,GAAwB,OAAXqE,EACxB,MAAM,IAAIC,UAAU,8CAIxB,IADA,IAAIC,EAASjI,OAAO+H,GACXrH,EAAQ,EAAGA,EAAQjE,UAAUwG,OAAQvC,IAAS,CACnD,IAAIoE,EAASrI,UAAUiE,GACvB,GAAIoE,IAAWpB,GAAwB,OAAXoB,EACxB,IAAK,IAAIoD,KAAWpD,EACZA,EAAOwC,eAAeY,KACtBD,EAAOC,GAAWpD,EAAOoD,IAKzC,OAAOD,GAGFjI,OAAOsE,OAWpB,IAAI6D,EAASZ,GAAU,SAAgBa,EAAMpD,EAAKqD,GAC9C,IAAIC,EAAOtI,OAAOsI,KAAKtD,GACnBqC,EAAI,EACR,MAAOA,EAAIiB,EAAKrF,SACPoF,GAAUA,GAASD,EAAKE,EAAKjB,MAAQ3D,KACtC0E,EAAKE,EAAKjB,IAAMrC,EAAIsD,EAAKjB,KAE7BA,IAEJ,OAAOe,IACR,SAAU,iBASTC,EAAQd,GAAU,SAAea,EAAMpD,GACvC,OAAOmD,EAAOC,EAAMpD,GAAK,KAC1B,QAAS,iBAQZ,SAASuD,EAAQC,EAAOC,EAAM5I,GAC1B,IACI6I,EADAC,EAAQF,EAAKnM,UAGjBoM,EAASF,EAAMlM,UAAY0D,OAAO4I,OAAOD,GACzCD,EAAO3D,YAAcyD,EACrBE,EAAOG,OAASF,EAEZ9I,GACAyE,EAAOoE,EAAQ7I,GAUvB,SAASkH,EAAO5K,EAAI2K,GAChB,OAAO,WACH,OAAO3K,EAAGS,MAAMkK,EAASrK,YAWjC,SAASqM,EAAS1I,EAAKhE,GACnB,cAAWgE,GAAOmG,EACPnG,EAAIxD,MAAMR,GAAOA,EAAK,IAAkBsH,EAAWtH,GAEvDgE,EASX,SAAS2I,EAAYC,EAAMC,GACvB,OAAQD,IAAStF,EAAauF,EAAOD,EASzC,SAASE,EAAkBnB,EAAQoB,EAAOC,GACtCjC,EAAKkC,EAASF,IAAQ,SAASG,GAC3BvB,EAAOwB,iBAAiBD,EAAMF,GAAS,MAU/C,SAASI,EAAqBzB,EAAQoB,EAAOC,GACzCjC,EAAKkC,EAASF,IAAQ,SAASG,GAC3BvB,EAAO0B,oBAAoBH,EAAMF,GAAS,MAWlD,SAASM,EAAUC,EAAMC,GACrB,MAAOD,EAAM,CACT,GAAIA,GAAQC,EACR,OAAO,EAEXD,EAAOA,EAAKE,WAEhB,OAAO,EASX,SAASC,EAAMC,EAAKC,GAChB,OAAOD,EAAIE,QAAQD,IAAS,EAQhC,SAASX,EAASU,GACd,OAAOA,EAAIG,OAAOC,MAAM,QAU5B,SAASC,EAAQpF,EAAKgF,EAAMK,GACxB,GAAIrF,EAAIiF,UAAYI,EAChB,OAAOrF,EAAIiF,QAAQD,GAEnB,IAAI3C,EAAI,EACR,MAAOA,EAAIrC,EAAI/B,OAAQ,CACnB,GAAKoH,GAAarF,EAAIqC,GAAGgD,IAAcL,IAAWK,GAAarF,EAAIqC,KAAO2C,EACtE,OAAO3C,EAEXA,IAEJ,OAAQ,EAShB,SAAS7I,EAAQW,GACb,OAAO9C,MAAMC,UAAUC,MAAMC,KAAK2C,EAAK,GAU3C,SAASmL,EAAYtF,EAAKuF,EAAKC,GAC3B,IAAIC,EAAU,GACVC,EAAS,GACTrD,EAAI,EAER,MAAOA,EAAIrC,EAAI/B,OAAQ,CACnB,IAAI7C,EAAMmK,EAAMvF,EAAIqC,GAAGkD,GAAOvF,EAAIqC,GAC9B+C,EAAQM,EAAQtK,GAAO,GACvBqK,EAAQhH,KAAKuB,EAAIqC,IAErBqD,EAAOrD,GAAKjH,EACZiH,IAaJ,OAVImD,IAIIC,EAHCF,EAGSE,EAAQD,MAAK,SAAyBG,EAAGC,GAC/C,OAAOD,EAAEJ,GAAOK,EAAEL,MAHZE,EAAQD,QAQnBC,EASX,SAASI,EAAS1L,EAAK2L,GACnB,IAAIC,EAAQhL,EACRiL,EAAYF,EAAS,GAAGG,cAAgBH,EAASvO,MAAM,GAEvD8K,EAAI,EACR,MAAOA,EAAIhB,EAAgBpD,OAAQ,CAI/B,GAHA8H,EAAS1E,EAAgBgB,GACzBtH,EAAO,EAAWgL,EAASC,EAAYF,EAEnC/K,KAAQZ,EACR,OAAOY,EAEXsH,IAEJ,OAAO3D,EAOX,IAAIwH,EAAY,EAChB,SAASC,IACL,OAAOD,IAQX,SAASE,EAAoBC,GACzB,IAAIC,EAAMD,EAAQE,eAAiBF,EACnC,OAAQC,EAAIE,aAAeF,EAAIG,cAAgBjH,EAGnD,IAAIkH,EAAe,wCAEfC,EAAiB,iBAAkBnH,EACnCoH,EAAyBf,EAASrG,EAAQ,kBAAoBd,EAC9DmI,EAAqBF,GAAiBD,EAAaI,KAAKC,UAAUC,WAElEC,EAAmB,QACnBC,EAAiB,MACjBC,EAAmB,QACnBC,EAAoB,SAEpBC,EAAmB,GAEnBC,EAAc,EACdC,EAAa,EACbC,EAAY,EACZC,EAAe,EAEfC,EAAiB,EACjBC,EAAiB,EACjBC,EAAkB,EAClBC,EAAe,EACfC,GAAiB,GAEjBC,GAAuBJ,EAAiBC,EACxCI,GAAqBH,EAAeC,GACpCG,GAAgBF,GAAuBC,GAEvCE,GAAW,CAAC,IAAK,KACjBC,GAAkB,CAAC,UAAW,WASlC,SAASC,GAAMC,EAASrK,GACpB,IAAIsK,EAAO/O,KACXA,KAAK8O,QAAUA,EACf9O,KAAKyE,SAAWA,EAChBzE,KAAK8M,QAAUgC,EAAQhC,QACvB9M,KAAKwJ,OAASsF,EAAQhJ,QAAQkJ,YAI9BhP,KAAKiP,WAAa,SAASC,GACnB3E,EAASuE,EAAQhJ,QAAQqJ,OAAQ,CAACL,KAClCC,EAAKlE,QAAQqE,IAIrBlP,KAAKoP,OAoCT,SAASC,GAAoBP,GACzB,IAAIQ,EACAC,EAAaT,EAAQhJ,QAAQyJ,WAajC,OAVID,EADAC,IAEOlC,EACAmC,GACAlC,EACAmC,GACCrC,EAGDsC,GAFAC,IAIJ,IAAI,EAAOb,EAASc,IAS/B,SAASA,GAAad,EAASe,EAAWC,GACtC,IAAIC,EAAcD,EAAME,SAAStL,OAC7BuL,EAAqBH,EAAMI,gBAAgBxL,OAC3CyL,EAAWN,EAAY9B,GAAgBgC,EAAcE,IAAuB,EAC5EG,EAAWP,GAAa5B,EAAYC,IAAkB6B,EAAcE,IAAuB,EAE/FH,EAAMK,UAAYA,EAClBL,EAAMM,UAAYA,EAEdD,IACArB,EAAQuB,QAAU,IAKtBP,EAAMD,UAAYA,EAGlBS,GAAiBxB,EAASgB,GAG1BhB,EAAQyB,KAAK,eAAgBT,GAE7BhB,EAAQ0B,UAAUV,GAClBhB,EAAQuB,QAAQI,UAAYX,EAQhC,SAASQ,GAAiBxB,EAASgB,GAC/B,IAAIO,EAAUvB,EAAQuB,QAClBL,EAAWF,EAAME,SACjBU,EAAiBV,EAAStL,OAGzB2L,EAAQM,aACTN,EAAQM,WAAaC,GAAqBd,IAI1CY,EAAiB,IAAML,EAAQQ,cAC/BR,EAAQQ,cAAgBD,GAAqBd,GACnB,IAAnBY,IACPL,EAAQQ,eAAgB,GAG5B,IAAIF,EAAaN,EAAQM,WACrBE,EAAgBR,EAAQQ,cACxBC,EAAeD,EAAgBA,EAAcE,OAASJ,EAAWI,OAEjEA,EAASjB,EAAMiB,OAASC,GAAUhB,GACtCF,EAAMmB,UAAY9I,IAClB2H,EAAMoB,UAAYpB,EAAMmB,UAAYN,EAAWM,UAE/CnB,EAAMqB,MAAQC,GAASN,EAAcC,GACrCjB,EAAMuB,SAAWC,GAAYR,EAAcC,GAE3CQ,GAAelB,EAASP,GACxBA,EAAM0B,gBAAkBC,GAAa3B,EAAM4B,OAAQ5B,EAAM6B,QAEzD,IAAIC,EAAkBC,GAAY/B,EAAMoB,UAAWpB,EAAM4B,OAAQ5B,EAAM6B,QACvE7B,EAAMgC,iBAAmBF,EAAgBrK,EACzCuI,EAAMiC,iBAAmBH,EAAgBpK,EACzCsI,EAAM8B,gBAAmB1J,EAAI0J,EAAgBrK,GAAKW,EAAI0J,EAAgBpK,GAAMoK,EAAgBrK,EAAIqK,EAAgBpK,EAEhHsI,EAAMkC,MAAQnB,EAAgBoB,GAASpB,EAAcb,SAAUA,GAAY,EAC3EF,EAAMoC,SAAWrB,EAAgBsB,GAAYtB,EAAcb,SAAUA,GAAY,EAEjFF,EAAMsC,YAAe/B,EAAQI,UAAsCX,EAAME,SAAStL,OAC9E2L,EAAQI,UAAU2B,YAAetC,EAAME,SAAStL,OAAS2L,EAAQI,UAAU2B,YADtCtC,EAAME,SAAStL,OAGxD2N,GAAyBhC,EAASP,GAGlC,IAAItG,EAASsF,EAAQhC,QACjB3B,EAAU2E,EAAMwC,SAAS9I,OAAQA,KACjCA,EAASsG,EAAMwC,SAAS9I,QAE5BsG,EAAMtG,OAASA,EAGnB,SAAS+H,GAAelB,EAASP,GAC7B,IAAIiB,EAASjB,EAAMiB,OACfwB,EAASlC,EAAQmC,aAAe,GAChCC,EAAYpC,EAAQoC,WAAa,GACjChC,EAAYJ,EAAQI,WAAa,GAEjCX,EAAMD,YAAc9B,GAAe0C,EAAUZ,YAAc5B,IAC3DwE,EAAYpC,EAAQoC,UAAY,CAC5BlL,EAAGkJ,EAAUiB,QAAU,EACvBlK,EAAGiJ,EAAUkB,QAAU,GAG3BY,EAASlC,EAAQmC,YAAc,CAC3BjL,EAAGwJ,EAAOxJ,EACVC,EAAGuJ,EAAOvJ,IAIlBsI,EAAM4B,OAASe,EAAUlL,GAAKwJ,EAAOxJ,EAAIgL,EAAOhL,GAChDuI,EAAM6B,OAASc,EAAUjL,GAAKuJ,EAAOvJ,EAAI+K,EAAO/K,GAQpD,SAAS6K,GAAyBhC,EAASP,GACvC,IAEI4C,EAAUC,EAAWC,EAAWC,EAFhCC,EAAOzC,EAAQ0C,cAAgBjD,EAC/BoB,EAAYpB,EAAMmB,UAAY6B,EAAK7B,UAGvC,GAAInB,EAAMD,WAAa3B,IAAiBgD,EAAYpD,GAAoBgF,EAAKJ,WAAavN,GAAY,CAClG,IAAIuM,EAAS5B,EAAM4B,OAASoB,EAAKpB,OAC7BC,EAAS7B,EAAM6B,OAASmB,EAAKnB,OAE7BqB,EAAInB,GAAYX,EAAWQ,EAAQC,GACvCgB,EAAYK,EAAEzL,EACdqL,EAAYI,EAAExL,EACdkL,EAAYxK,EAAI8K,EAAEzL,GAAKW,EAAI8K,EAAExL,GAAMwL,EAAEzL,EAAIyL,EAAExL,EAC3CqL,EAAYpB,GAAaC,EAAQC,GAEjCtB,EAAQ0C,aAAejD,OAGvB4C,EAAWI,EAAKJ,SAChBC,EAAYG,EAAKH,UACjBC,EAAYE,EAAKF,UACjBC,EAAYC,EAAKD,UAGrB/C,EAAM4C,SAAWA,EACjB5C,EAAM6C,UAAYA,EAClB7C,EAAM8C,UAAYA,EAClB9C,EAAM+C,UAAYA,EAQtB,SAASjC,GAAqBd,GAG1B,IAAIE,EAAW,GACXlH,EAAI,EACR,MAAOA,EAAIgH,EAAME,SAAStL,OACtBsL,EAASlH,GAAK,CACVmK,QAAShL,EAAM6H,EAAME,SAASlH,GAAGmK,SACjCC,QAASjL,EAAM6H,EAAME,SAASlH,GAAGoK,UAErCpK,IAGJ,MAAO,CACHmI,UAAW9I,IACX6H,SAAUA,EACVe,OAAQC,GAAUhB,GAClB0B,OAAQ5B,EAAM4B,OACdC,OAAQ7B,EAAM6B,QAStB,SAASX,GAAUhB,GACf,IAAIU,EAAiBV,EAAStL,OAG9B,GAAuB,IAAnBgM,EACA,MAAO,CACHnJ,EAAGU,EAAM+H,EAAS,GAAGiD,SACrBzL,EAAGS,EAAM+H,EAAS,GAAGkD,UAI7B,IAAI3L,EAAI,EAAGC,EAAI,EAAGsB,EAAI,EACtB,MAAOA,EAAI4H,EACPnJ,GAAKyI,EAASlH,GAAGmK,QACjBzL,GAAKwI,EAASlH,GAAGoK,QACjBpK,IAGJ,MAAO,CACHvB,EAAGU,EAAMV,EAAImJ,GACblJ,EAAGS,EAAMT,EAAIkJ,IAWrB,SAASmB,GAAYX,EAAW3J,EAAGC,GAC/B,MAAO,CACHD,EAAGA,EAAI2J,GAAa,EACpB1J,EAAGA,EAAI0J,GAAa,GAU5B,SAASO,GAAalK,EAAGC,GACrB,OAAID,IAAMC,EACC2G,EAGPjG,EAAIX,IAAMW,EAAIV,GACPD,EAAI,EAAI6G,EAAiBC,EAE7B7G,EAAI,EAAI8G,EAAeC,GAUlC,SAAS+C,GAAY6B,EAAIC,EAAIC,GACpBA,IACDA,EAAQ1E,IAEZ,IAAIpH,EAAI6L,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B7L,EAAI4L,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAEhC,OAAOpM,KAAKqM,KAAM/L,EAAIA,EAAMC,EAAIA,GAUpC,SAAS4J,GAAS+B,EAAIC,EAAIC,GACjBA,IACDA,EAAQ1E,IAEZ,IAAIpH,EAAI6L,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAC5B7L,EAAI4L,EAAGC,EAAM,IAAMF,EAAGE,EAAM,IAChC,OAA0B,IAAnBpM,KAAKsM,MAAM/L,EAAGD,GAAWN,KAAKuM,GASzC,SAASrB,GAAYsB,EAAOC,GACxB,OAAOtC,GAASsC,EAAI,GAAIA,EAAI,GAAI9E,IAAmBwC,GAASqC,EAAM,GAAIA,EAAM,GAAI7E,IAUpF,SAASqD,GAASwB,EAAOC,GACrB,OAAOpC,GAAYoC,EAAI,GAAIA,EAAI,GAAI9E,IAAmB0C,GAAYmC,EAAM,GAAIA,EAAM,GAAI7E,IA/U1FC,GAAM9Q,UAAY,CAKd8M,QAAS,aAKTuE,KAAM,WACFpP,KAAK2T,MAAQhJ,EAAkB3K,KAAK8M,QAAS9M,KAAK2T,KAAM3T,KAAKiP,YAC7DjP,KAAK4T,UAAYjJ,EAAkB3K,KAAKwJ,OAAQxJ,KAAK4T,SAAU5T,KAAKiP,YACpEjP,KAAK6T,OAASlJ,EAAkBkC,EAAoB7M,KAAK8M,SAAU9M,KAAK6T,MAAO7T,KAAKiP,aAMxF6E,QAAS,WACL9T,KAAK2T,MAAQ1I,EAAqBjL,KAAK8M,QAAS9M,KAAK2T,KAAM3T,KAAKiP,YAChEjP,KAAK4T,UAAY3I,EAAqBjL,KAAKwJ,OAAQxJ,KAAK4T,SAAU5T,KAAKiP,YACvEjP,KAAK6T,OAAS5I,EAAqB4B,EAAoB7M,KAAK8M,SAAU9M,KAAK6T,MAAO7T,KAAKiP,cA4T/F,IAAI8E,GAAkB,CAClBC,UAAWjG,EACXkG,UAAWjG,EACXkG,QAASjG,GAGTkG,GAAuB,YACvBC,GAAsB,oBAO1B,SAASzE,KACL3P,KAAK2T,KAAOQ,GACZnU,KAAK6T,MAAQO,GAEbpU,KAAKqU,SAAU,EAEfxF,GAAMxQ,MAAM2B,KAAM9B,WAGtB8L,EAAQ2F,GAAYd,GAAO,CAKvBhE,QAAS,SAAmBqE,GACxB,IAAIW,EAAYkE,GAAgB7E,EAAGnE,MAG/B8E,EAAY9B,GAA6B,IAAdmB,EAAGoF,SAC9BtU,KAAKqU,SAAU,GAGfxE,EAAY7B,GAA2B,IAAbkB,EAAGqF,QAC7B1E,EAAY5B,GAIXjO,KAAKqU,UAINxE,EAAY5B,IACZjO,KAAKqU,SAAU,GAGnBrU,KAAKyE,SAASzE,KAAK8O,QAASe,EAAW,CACnCG,SAAU,CAACd,GACXgB,gBAAiB,CAAChB,GAClBsF,YAAa5G,EACb0E,SAAUpD,QAKtB,IAAIuF,GAAoB,CACpBC,YAAa3G,EACb4G,YAAa3G,EACb4G,UAAW3G,EACX4G,cAAe3G,EACf4G,WAAY5G,GAIZ6G,GAAyB,CACzBC,EAAGtH,EACHuH,EAAGtH,EACHuH,EAAGtH,EACHuH,EAAGtH,GAGHuH,GAAyB,cACzBC,GAAwB,sCAa5B,SAAS7F,KACLxP,KAAK2T,KAAOyB,GACZpV,KAAK6T,MAAQwB,GAEbxG,GAAMxQ,MAAM2B,KAAM9B,WAElB8B,KAAKyC,MAASzC,KAAK8O,QAAQuB,QAAQiF,cAAgB,GAhBnDrP,EAAOsP,iBAAmBtP,EAAOuP,eACjCJ,GAAyB,gBACzBC,GAAwB,6CAiB5BrL,EAAQwF,GAAmBX,GAAO,CAK9BhE,QAAS,SAAmBqE,GACxB,IAAIzM,EAAQzC,KAAKyC,MACbgT,GAAgB,EAEhBC,EAAsBxG,EAAGnE,KAAK4K,cAAcnR,QAAQ,KAAM,IAC1DqL,EAAY4E,GAAkBiB,GAC9BlB,EAAcO,GAAuB7F,EAAGsF,cAAgBtF,EAAGsF,YAE3DoB,EAAWpB,GAAe9G,EAG1BmI,EAAahK,EAAQpJ,EAAOyM,EAAG4G,UAAW,aAG1CjG,EAAY9B,IAA8B,IAAdmB,EAAGoF,QAAgBsB,GAC3CC,EAAa,IACbpT,EAAMyC,KAAKgK,GACX2G,EAAapT,EAAMiC,OAAS,GAEzBmL,GAAa5B,EAAYC,KAChCuH,GAAgB,GAIhBI,EAAa,IAKjBpT,EAAMoT,GAAc3G,EAEpBlP,KAAKyE,SAASzE,KAAK8O,QAASe,EAAW,CACnCG,SAAUvN,EACVyN,gBAAiB,CAAChB,GAClBsF,YAAaA,EACblC,SAAUpD,IAGVuG,GAEAhT,EAAMsT,OAAOF,EAAY,OAKrC,IAAIG,GAAyB,CACzBC,WAAYlI,EACZmI,UAAWlI,EACXmI,SAAUlI,EACVmI,YAAalI,GAGbmI,GAA6B,aAC7BC,GAA6B,4CAOjC,SAASC,KACLvW,KAAK4T,SAAWyC,GAChBrW,KAAK6T,MAAQyC,GACbtW,KAAKwW,SAAU,EAEf3H,GAAMxQ,MAAM2B,KAAM9B,WAsCtB,SAASuY,GAAuBvH,EAAInE,GAChC,IAAIjE,EAAM7G,EAAQiP,EAAGwH,SACjBC,EAAU1W,EAAQiP,EAAG0H,gBAMzB,OAJI7L,GAAQkD,EAAYC,KACpBpH,EAAMiF,EAAYjF,EAAI+P,OAAOF,GAAU,cAAc,IAGlD,CAAC7P,EAAK6P,GA3CjB3M,EAAQuM,GAAkB1H,GAAO,CAC7BhE,QAAS,SAAmBqE,GACxB,IAAInE,EAAOiL,GAAuB9G,EAAGnE,MAOrC,GAJIA,IAASgD,IACT/N,KAAKwW,SAAU,GAGdxW,KAAKwW,QAAV,CAIA,IAAIE,EAAUD,GAAuBxY,KAAK+B,KAAMkP,EAAInE,GAGhDA,GAAQkD,EAAYC,IAAiBwI,EAAQ,GAAGhS,OAASgS,EAAQ,GAAGhS,SAAW,IAC/E1E,KAAKwW,SAAU,GAGnBxW,KAAKyE,SAASzE,KAAK8O,QAAS/D,EAAM,CAC9BiF,SAAU0G,EAAQ,GAClBxG,gBAAiBwG,EAAQ,GACzBlC,YAAa9G,EACb4E,SAAUpD,QAsBtB,IAAI4H,GAAkB,CAClBb,WAAYlI,EACZmI,UAAWlI,EACXmI,SAAUlI,EACVmI,YAAalI,GAGb6I,GAAsB,4CAO1B,SAAStH,KACLzP,KAAK4T,SAAWmD,GAChB/W,KAAKgX,UAAY,GAEjBnI,GAAMxQ,MAAM2B,KAAM9B,WA0BtB,SAAS+Y,GAAW/H,EAAInE,GACpB,IAAImM,EAAajX,EAAQiP,EAAGwH,SACxBM,EAAYhX,KAAKgX,UAGrB,GAAIjM,GAAQgD,EAAcC,IAAqC,IAAtBkJ,EAAWxS,OAEhD,OADAsS,EAAUE,EAAW,GAAGC,aAAc,EAC/B,CAACD,EAAYA,GAGxB,IAAIpO,EACAsO,EACAR,EAAiB3W,EAAQiP,EAAG0H,gBAC5BS,EAAuB,GACvB7N,EAASxJ,KAAKwJ,OAQlB,GALA4N,EAAgBF,EAAWI,QAAO,SAASC,GACvC,OAAOpM,EAAUoM,EAAM/N,OAAQA,MAI/BuB,IAASgD,EAAa,CACtBjF,EAAI,EACJ,MAAOA,EAAIsO,EAAc1S,OACrBsS,EAAUI,EAActO,GAAGqO,aAAc,EACzCrO,IAKRA,EAAI,EACJ,MAAOA,EAAI8N,EAAelS,OAClBsS,EAAUJ,EAAe9N,GAAGqO,aAC5BE,EAAqBnS,KAAK0R,EAAe9N,IAIzCiC,GAAQkD,EAAYC,WACb8I,EAAUJ,EAAe9N,GAAGqO,YAEvCrO,IAGJ,OAAKuO,EAAqB3S,OAInB,CAEHqH,EAAYqL,EAAcP,OAAOQ,GAAuB,cAAc,GACtEA,QAPJ,EAnEJrN,EAAQyF,GAAYZ,GAAO,CACvBhE,QAAS,SAAoBqE,GACzB,IAAInE,EAAO+L,GAAgB5H,EAAGnE,MAC1B2L,EAAUO,GAAWhZ,KAAK+B,KAAMkP,EAAInE,GACnC2L,GAIL1W,KAAKyE,SAASzE,KAAK8O,QAAS/D,EAAM,CAC9BiF,SAAU0G,EAAQ,GAClBxG,gBAAiBwG,EAAQ,GACzBlC,YAAa9G,EACb4E,SAAUpD,OA4EtB,IAAIsI,GAAgB,KAChBC,GAAiB,GAErB,SAAS/H,KACLb,GAAMxQ,MAAM2B,KAAM9B,WAElB,IAAI2M,EAAUrC,EAAOxI,KAAK6K,QAAS7K,MACnCA,KAAKuX,MAAQ,IAAI9H,GAAWzP,KAAK8O,QAASjE,GAC1C7K,KAAK0X,MAAQ,IAAI/H,GAAW3P,KAAK8O,QAASjE,GAE1C7K,KAAK2X,aAAe,KACpB3X,KAAK4X,YAAc,GAqCvB,SAASC,GAAchI,EAAWiI,GAC1BjI,EAAY9B,GACZ/N,KAAK2X,aAAeG,EAAU5H,gBAAgB,GAAGiH,WACjDY,GAAa9Z,KAAK+B,KAAM8X,IACjBjI,GAAa5B,EAAYC,IAChC6J,GAAa9Z,KAAK+B,KAAM8X,GAIhC,SAASC,GAAaD,GAClB,IAAIP,EAAQO,EAAU5H,gBAAgB,GAEtC,GAAIqH,EAAMJ,aAAenX,KAAK2X,aAAc,CACxC,IAAIK,EAAY,CAACzQ,EAAGgQ,EAAMtE,QAASzL,EAAG+P,EAAMrE,SAC5ClT,KAAK4X,YAAY1S,KAAK8S,GACtB,IAAIC,EAAMjY,KAAK4X,YACXM,EAAkB,WAClB,IAAIpP,EAAImP,EAAIvM,QAAQsM,GAChBlP,GAAK,GACLmP,EAAIlC,OAAOjN,EAAG,IAGtB1K,WAAW8Z,EAAiBV,KAIpC,SAASW,GAAiBL,GAEtB,IADA,IAAIvQ,EAAIuQ,EAAUxF,SAASW,QAASzL,EAAIsQ,EAAUxF,SAASY,QAClDpK,EAAI,EAAGA,EAAI9I,KAAK4X,YAAYlT,OAAQoE,IAAK,CAC9C,IAAIsP,EAAIpY,KAAK4X,YAAY9O,GACrBuP,EAAKpR,KAAKiB,IAAIX,EAAI6Q,EAAE7Q,GAAI+Q,EAAKrR,KAAKiB,IAAIV,EAAI4Q,EAAE5Q,GAChD,GAAI6Q,GAAMZ,IAAkBa,GAAMb,GAC9B,OAAO,EAGf,OAAO,EArEXzN,EAAQ0F,GAAiBb,GAAO,CAO5BhE,QAAS,SAAoBiE,EAASyJ,EAAYC,GAC9C,IAAI5C,EAAW4C,EAAUhE,aAAe9G,EACpC+K,EAAWD,EAAUhE,aAAe5G,EAExC,KAAI6K,GAAWD,EAAUE,oBAAsBF,EAAUE,mBAAmBC,kBAA5E,CAKA,GAAI/C,EACAiC,GAAc5Z,KAAK+B,KAAMuY,EAAYC,QAClC,GAAIC,GAAWN,GAAiBla,KAAK+B,KAAMwY,GAC9C,OAGJxY,KAAKyE,SAASqK,EAASyJ,EAAYC,KAMvC1E,QAAS,WACL9T,KAAKuX,MAAMzD,UACX9T,KAAK0X,MAAM5D,aA0CnB,IAAI8E,GAAwBtM,EAASvE,EAAa8Q,MAAO,eACrDC,GAAsBF,KAA0BzT,EAGhD4T,GAAuB,UACvBC,GAAoB,OACpBC,GAA4B,eAC5BC,GAAoB,OACpBC,GAAqB,QACrBC,GAAqB,QACrBC,GAAmBC,KASvB,SAASC,GAAYzK,EAAS7N,GAC1BjB,KAAK8O,QAAUA,EACf9O,KAAK4B,IAAIX,GAmGb,SAASuY,GAAkBC,GAEvB,GAAIlO,EAAMkO,EAASP,IACf,OAAOA,GAGX,IAAIQ,EAAUnO,EAAMkO,EAASN,IACzBQ,EAAUpO,EAAMkO,EAASL,IAM7B,OAAIM,GAAWC,EACJT,GAIPQ,GAAWC,EACJD,EAAUP,GAAqBC,GAItC7N,EAAMkO,EAASR,IACRA,GAGJD,GAGX,SAASM,KACL,IAAKR,GACD,OAAO,EAEX,IAAIc,EAAW,GACXC,EAAc5T,EAAO6T,KAAO7T,EAAO6T,IAAIC,SAO3C,MANA,CAAC,OAAQ,eAAgB,QAAS,QAAS,cAAe,QAAQxY,SAAQ,SAASM,GAI/E+X,EAAS/X,IAAOgY,GAAc5T,EAAO6T,IAAIC,SAAS,eAAgBlY,MAE/D+X,EA1IXL,GAAYxb,UAAY,CAKpB6D,IAAK,SAASX,GAENA,GAAS8X,KACT9X,EAAQjB,KAAKga,WAGblB,IAAuB9Y,KAAK8O,QAAQhC,QAAQ+L,OAASQ,GAAiBpY,KACtEjB,KAAK8O,QAAQhC,QAAQ+L,MAAMD,IAAyB3X,GAExDjB,KAAKyZ,QAAUxY,EAAM0U,cAAchK,QAMvCsO,OAAQ,WACJja,KAAK4B,IAAI5B,KAAK8O,QAAQhJ,QAAQoU,cAOlCF,QAAS,WACL,IAAIP,EAAU,GAMd,OALA7Q,EAAK5I,KAAK8O,QAAQqL,aAAa,SAASC,GAChC7P,EAAS6P,EAAWtU,QAAQqJ,OAAQ,CAACiL,MACrCX,EAAUA,EAAQ5C,OAAOuD,EAAWC,sBAGrCb,GAAkBC,EAAQa,KAAK,OAO1CC,gBAAiB,SAASzK,GACtB,IAAIwC,EAAWxC,EAAMwC,SACjBO,EAAY/C,EAAM0B,gBAGtB,GAAIxR,KAAK8O,QAAQuB,QAAQmK,UACrBlI,EAASmI,qBADb,CAKA,IAAIhB,EAAUzZ,KAAKyZ,QACfiB,EAAUnP,EAAMkO,EAASP,MAAuBG,GAAiBH,IACjES,EAAUpO,EAAMkO,EAASL,MAAwBC,GAAiBD,IAClEM,EAAUnO,EAAMkO,EAASN,MAAwBE,GAAiBF,IAEtE,GAAIuB,EAAS,CAGT,IAAIC,EAAyC,IAA1B7K,EAAME,SAAStL,OAC9BkW,EAAgB9K,EAAMuB,SAAW,EACjCwJ,EAAiB/K,EAAMoB,UAAY,IAEvC,GAAIyJ,GAAgBC,GAAiBC,EACjC,OAIR,IAAInB,IAAWC,EAKf,OAAIe,GACCf,GAAW9G,EAAYrE,IACvBkL,GAAW7G,EAAYpE,GACjBzO,KAAK8a,WAAWxI,QAH3B,IAWJwI,WAAY,SAASxI,GACjBtS,KAAK8O,QAAQuB,QAAQmK,WAAY,EACjClI,EAASmI,mBAiFjB,IAAIM,GAAiB,EACjBC,GAAc,EACdC,GAAgB,EAChBC,GAAc,EACdC,GAAmBD,GACnBE,GAAkB,GAClBC,GAAe,GAQnB,SAASC,GAAWxV,GAChB9F,KAAK8F,QAAUC,EAAO,GAAI/F,KAAKub,SAAUzV,GAAW,IAEpD9F,KAAKwb,GAAK5O,IAEV5M,KAAK8O,QAAU,KAGf9O,KAAK8F,QAAQqJ,OAAS3E,EAAYxK,KAAK8F,QAAQqJ,QAAQ,GAEvDnP,KAAKyb,MAAQV,GAEb/a,KAAK0b,aAAe,GACpB1b,KAAK2b,YAAc,GAqOvB,SAASC,GAASH,GACd,OAAIA,EAAQL,GACD,SACAK,EAAQP,GACR,MACAO,EAAQR,GACR,OACAQ,EAAQT,GACR,QAEJ,GAQX,SAASa,GAAahJ,GAClB,OAAIA,GAAatE,GACN,OACAsE,GAAavE,EACb,KACAuE,GAAazE,EACb,OACAyE,GAAaxE,EACb,QAEJ,GASX,SAASyN,GAA6BC,EAAiB3B,GACnD,IAAItL,EAAUsL,EAAWtL,QACzB,OAAIA,EACOA,EAAQnN,IAAIoa,GAEhBA,EAQX,SAASC,KACLV,GAAWjd,MAAM2B,KAAM9B,WA6D3B,SAAS+d,KACLD,GAAe3d,MAAM2B,KAAM9B,WAE3B8B,KAAKkc,GAAK,KACVlc,KAAKmc,GAAK,KA4Ed,SAASC,KACLJ,GAAe3d,MAAM2B,KAAM9B,WAsC/B,SAASme,KACLf,GAAWjd,MAAM2B,KAAM9B,WAEvB8B,KAAKsc,OAAS,KACdtc,KAAKuc,OAAS,KAmElB,SAASC,KACLR,GAAe3d,MAAM2B,KAAM9B,WA8B/B,SAASue,KACLT,GAAe3d,MAAM2B,KAAM9B,WA2D/B,SAASwe,KACLpB,GAAWjd,MAAM2B,KAAM9B,WAIvB8B,KAAK2c,OAAQ,EACb3c,KAAK4c,SAAU,EAEf5c,KAAKsc,OAAS,KACdtc,KAAKuc,OAAS,KACdvc,KAAK8E,MAAQ,EAqGjB,SAAS+X,GAAO/P,EAAShH,GAGrB,OAFAA,EAAUA,GAAW,GACrBA,EAAQqU,YAAc3P,EAAY1E,EAAQqU,YAAa0C,GAAOtB,SAASuB,QAChE,IAAIC,GAAQjQ,EAAShH,GA7tBhCwV,GAAWvd,UAAY,CAKnBwd,SAAU,GAOV3Z,IAAK,SAASkE,GAKV,OAJAC,EAAO/F,KAAK8F,QAASA,GAGrB9F,KAAK8O,SAAW9O,KAAK8O,QAAQoL,YAAYD,SAClCja,MAQXgd,cAAe,SAASjB,GACpB,GAAItT,EAAesT,EAAiB,gBAAiB/b,MACjD,OAAOA,KAGX,IAAI0b,EAAe1b,KAAK0b,aAMxB,OALAK,EAAkBD,GAA6BC,EAAiB/b,MAC3D0b,EAAaK,EAAgBP,MAC9BE,EAAaK,EAAgBP,IAAMO,EACnCA,EAAgBiB,cAAchd,OAE3BA,MAQXid,kBAAmB,SAASlB,GACxB,OAAItT,EAAesT,EAAiB,oBAAqB/b,QAIzD+b,EAAkBD,GAA6BC,EAAiB/b,aACzDA,KAAK0b,aAAaK,EAAgBP,KAJ9Bxb,MAafkd,eAAgB,SAASnB,GACrB,GAAItT,EAAesT,EAAiB,iBAAkB/b,MAClD,OAAOA,KAGX,IAAI2b,EAAc3b,KAAK2b,YAMvB,OALAI,EAAkBD,GAA6BC,EAAiB/b,OACjB,IAA3C6L,EAAQ8P,EAAaI,KACrBJ,EAAYzW,KAAK6W,GACjBA,EAAgBmB,eAAeld,OAE5BA,MAQXmd,mBAAoB,SAASpB,GACzB,GAAItT,EAAesT,EAAiB,qBAAsB/b,MACtD,OAAOA,KAGX+b,EAAkBD,GAA6BC,EAAiB/b,MAChE,IAAImC,EAAQ0J,EAAQ7L,KAAK2b,YAAaI,GAItC,OAHI5Z,GAAS,GACTnC,KAAK2b,YAAY5F,OAAO5T,EAAO,GAE5BnC,MAOXod,mBAAoB,WAChB,OAAOpd,KAAK2b,YAAYjX,OAAS,GAQrC2Y,iBAAkB,SAAStB,GACvB,QAAS/b,KAAK0b,aAAaK,EAAgBP,KAQ/CjL,KAAM,SAAST,GACX,IAAIf,EAAO/O,KACPyb,EAAQzb,KAAKyb,MAEjB,SAASlL,EAAK3M,GACVmL,EAAKD,QAAQyB,KAAK3M,EAAOkM,GAIzB2L,EAAQP,IACR3K,EAAKxB,EAAKjJ,QAAQlC,MAAQgY,GAASH,IAGvClL,EAAKxB,EAAKjJ,QAAQlC,OAEdkM,EAAMwN,iBACN/M,EAAKT,EAAMwN,iBAIX7B,GAASP,IACT3K,EAAKxB,EAAKjJ,QAAQlC,MAAQgY,GAASH,KAU3C8B,QAAS,SAASzN,GACd,GAAI9P,KAAKwd,UACL,OAAOxd,KAAKuQ,KAAKT,GAGrB9P,KAAKyb,MAAQJ,IAOjBmC,QAAS,WACL,IAAI1U,EAAI,EACR,MAAOA,EAAI9I,KAAK2b,YAAYjX,OAAQ,CAChC,KAAM1E,KAAK2b,YAAY7S,GAAG2S,OAASJ,GAAeN,KAC9C,OAAO,EAEXjS,IAEJ,OAAO,GAOX0H,UAAW,SAASgI,GAGhB,IAAIiF,EAAiB1X,EAAO,GAAIyS,GAGhC,IAAKjO,EAASvK,KAAK8F,QAAQqJ,OAAQ,CAACnP,KAAMyd,IAGtC,OAFAzd,KAAK0d,aACL1d,KAAKyb,MAAQJ,IAKbrb,KAAKyb,OAASN,GAAmBC,GAAkBC,MACnDrb,KAAKyb,MAAQV,IAGjB/a,KAAKyb,MAAQzb,KAAK2d,QAAQF,GAItBzd,KAAKyb,OAAST,GAAcC,GAAgBC,GAAcE,KAC1Dpb,KAAKud,QAAQE,IAWrBE,QAAS,SAASnF,KAOlB6B,eAAgB,aAOhBqD,MAAO,cA8DX1T,EAAQgS,GAAgBV,GAAY,CAKhCC,SAAU,CAKNvL,SAAU,GASd4N,SAAU,SAAS9N,GACf,IAAI+N,EAAiB7d,KAAK8F,QAAQkK,SAClC,OAA0B,IAAnB6N,GAAwB/N,EAAME,SAAStL,SAAWmZ,GAS7DF,QAAS,SAAS7N,GACd,IAAI2L,EAAQzb,KAAKyb,MACb5L,EAAYC,EAAMD,UAElBiO,EAAerC,GAAST,GAAcC,IACtC8C,EAAU/d,KAAK4d,SAAS9N,GAG5B,OAAIgO,IAAiBjO,EAAY3B,IAAiB6P,GACvCtC,EAAQL,GACR0C,GAAgBC,EACnBlO,EAAY5B,EACLwN,EAAQP,GACNO,EAAQT,GAGdS,EAAQR,GAFJD,GAIRK,MAiBfrR,EAAQiS,GAAeD,GAAgB,CAKnCT,SAAU,CACN3X,MAAO,MACPoa,UAAW,GACXhO,SAAU,EACV6C,UAAWnE,IAGf2L,eAAgB,WACZ,IAAIxH,EAAY7S,KAAK8F,QAAQ+M,UACzB4G,EAAU,GAOd,OANI5G,EAAYrE,IACZiL,EAAQvU,KAAKkU,IAEbvG,EAAYpE,IACZgL,EAAQvU,KAAKiU,IAEVM,GAGXwE,cAAe,SAASnO,GACpB,IAAIhK,EAAU9F,KAAK8F,QACfoY,GAAW,EACX7M,EAAWvB,EAAMuB,SACjBwB,EAAY/C,EAAM+C,UAClBtL,EAAIuI,EAAM4B,OACVlK,EAAIsI,EAAM6B,OAed,OAZMkB,EAAY/M,EAAQ+M,YAClB/M,EAAQ+M,UAAYrE,IACpBqE,EAAmB,IAANtL,EAAW4G,EAAkB5G,EAAI,EAAK6G,EAAiBC,EACpE6P,EAAW3W,GAAKvH,KAAKkc,GACrB7K,EAAWpK,KAAKiB,IAAI4H,EAAM4B,UAE1BmB,EAAmB,IAANrL,EAAW2G,EAAkB3G,EAAI,EAAK8G,EAAeC,GAClE2P,EAAW1W,GAAKxH,KAAKmc,GACrB9K,EAAWpK,KAAKiB,IAAI4H,EAAM6B,UAGlC7B,EAAM+C,UAAYA,EACXqL,GAAY7M,EAAWvL,EAAQkY,WAAanL,EAAY/M,EAAQ+M,WAG3E+K,SAAU,SAAS9N,GACf,OAAOkM,GAAeje,UAAU6f,SAAS3f,KAAK+B,KAAM8P,KAC/C9P,KAAKyb,MAAQT,MAAkBhb,KAAKyb,MAAQT,KAAgBhb,KAAKie,cAAcnO,KAGxFS,KAAM,SAAST,GAEX9P,KAAKkc,GAAKpM,EAAM4B,OAChB1R,KAAKmc,GAAKrM,EAAM6B,OAEhB,IAAIkB,EAAYgJ,GAAa/L,EAAM+C,WAE/BA,IACA/C,EAAMwN,gBAAkBtd,KAAK8F,QAAQlC,MAAQiP,GAEjD7S,KAAKsK,OAAOiG,KAAKtS,KAAK+B,KAAM8P,MAcpC9F,EAAQoS,GAAiBJ,GAAgB,CAKrCT,SAAU,CACN3X,MAAO,QACPoa,UAAW,EACXhO,SAAU,GAGdqK,eAAgB,WACZ,MAAO,CAACnB,KAGZ0E,SAAU,SAAS9N,GACf,OAAO9P,KAAKsK,OAAOsT,SAAS3f,KAAK+B,KAAM8P,KAClC7I,KAAKiB,IAAI4H,EAAMkC,MAAQ,GAAKhS,KAAK8F,QAAQkY,WAAahe,KAAKyb,MAAQT,KAG5EzK,KAAM,SAAST,GACX,GAAoB,IAAhBA,EAAMkC,MAAa,CACnB,IAAImM,EAAQrO,EAAMkC,MAAQ,EAAI,KAAO,MACrClC,EAAMwN,gBAAkBtd,KAAK8F,QAAQlC,MAAQua,EAEjDne,KAAKsK,OAAOiG,KAAKtS,KAAK+B,KAAM8P,MAiBpC9F,EAAQqS,GAAiBf,GAAY,CAKjCC,SAAU,CACN3X,MAAO,QACPoM,SAAU,EACVoO,KAAM,IACNJ,UAAW,GAGf3D,eAAgB,WACZ,MAAO,CAACrB,KAGZ2E,QAAS,SAAS7N,GACd,IAAIhK,EAAU9F,KAAK8F,QACfuY,EAAgBvO,EAAME,SAAStL,SAAWoB,EAAQkK,SAClDsO,EAAgBxO,EAAMuB,SAAWvL,EAAQkY,UACzCO,EAAYzO,EAAMoB,UAAYpL,EAAQsY,KAM1C,GAJApe,KAAKuc,OAASzM,GAITwO,IAAkBD,GAAkBvO,EAAMD,WAAa5B,EAAYC,KAAkBqQ,EACtFve,KAAK0d,aACF,GAAI5N,EAAMD,UAAY9B,EACzB/N,KAAK0d,QACL1d,KAAKsc,OAASjU,GAAkB,WAC5BrI,KAAKyb,MAAQN,GACbnb,KAAKud,YACNzX,EAAQsY,KAAMpe,WACd,GAAI8P,EAAMD,UAAY5B,EACzB,OAAOkN,GAEX,OAAOE,IAGXqC,MAAO,WACHc,aAAaxe,KAAKsc,SAGtB/L,KAAM,SAAST,GACP9P,KAAKyb,QAAUN,KAIfrL,GAAUA,EAAMD,UAAY5B,EAC5BjO,KAAK8O,QAAQyB,KAAKvQ,KAAK8F,QAAQlC,MAAQ,KAAMkM,IAE7C9P,KAAKuc,OAAOtL,UAAY9I,IACxBnI,KAAK8O,QAAQyB,KAAKvQ,KAAK8F,QAAQlC,MAAO5D,KAAKuc,aAevDvS,EAAQwS,GAAkBR,GAAgB,CAKtCT,SAAU,CACN3X,MAAO,SACPoa,UAAW,EACXhO,SAAU,GAGdqK,eAAgB,WACZ,MAAO,CAACnB,KAGZ0E,SAAU,SAAS9N,GACf,OAAO9P,KAAKsK,OAAOsT,SAAS3f,KAAK+B,KAAM8P,KAClC7I,KAAKiB,IAAI4H,EAAMoC,UAAYlS,KAAK8F,QAAQkY,WAAahe,KAAKyb,MAAQT,OAc/EhR,EAAQyS,GAAiBT,GAAgB,CAKrCT,SAAU,CACN3X,MAAO,QACPoa,UAAW,GACXtL,SAAU,GACVG,UAAWrE,GAAuBC,GAClCuB,SAAU,GAGdqK,eAAgB,WACZ,OAAO4B,GAAcle,UAAUsc,eAAepc,KAAK+B,OAGvD4d,SAAU,SAAS9N,GACf,IACI4C,EADAG,EAAY7S,KAAK8F,QAAQ+M,UAW7B,OARIA,GAAarE,GAAuBC,IACpCiE,EAAW5C,EAAM8B,gBACViB,EAAYrE,GACnBkE,EAAW5C,EAAMgC,iBACVe,EAAYpE,KACnBiE,EAAW5C,EAAMiC,kBAGd/R,KAAKsK,OAAOsT,SAAS3f,KAAK+B,KAAM8P,IACnC+C,EAAY/C,EAAM0B,iBAClB1B,EAAMuB,SAAWrR,KAAK8F,QAAQkY,WAC9BlO,EAAMsC,aAAepS,KAAK8F,QAAQkK,UAClC9H,EAAIwK,GAAY1S,KAAK8F,QAAQ4M,UAAY5C,EAAMD,UAAY5B,GAGnEsC,KAAM,SAAST,GACX,IAAI+C,EAAYgJ,GAAa/L,EAAM0B,iBAC/BqB,GACA7S,KAAK8O,QAAQyB,KAAKvQ,KAAK8F,QAAQlC,MAAQiP,EAAW/C,GAGtD9P,KAAK8O,QAAQyB,KAAKvQ,KAAK8F,QAAQlC,MAAOkM,MA2B9C9F,EAAQ0S,GAAepB,GAAY,CAK/BC,SAAU,CACN3X,MAAO,MACPoM,SAAU,EACVyO,KAAM,EACNC,SAAU,IACVN,KAAM,IACNJ,UAAW,EACXW,aAAc,IAGlBtE,eAAgB,WACZ,MAAO,CAACpB,KAGZ0E,QAAS,SAAS7N,GACd,IAAIhK,EAAU9F,KAAK8F,QAEfuY,EAAgBvO,EAAME,SAAStL,SAAWoB,EAAQkK,SAClDsO,EAAgBxO,EAAMuB,SAAWvL,EAAQkY,UACzCY,EAAiB9O,EAAMoB,UAAYpL,EAAQsY,KAI/C,GAFApe,KAAK0d,QAEA5N,EAAMD,UAAY9B,GAAgC,IAAf/N,KAAK8E,MACzC,OAAO9E,KAAK6e,cAKhB,GAAIP,GAAiBM,GAAkBP,EAAe,CAClD,GAAIvO,EAAMD,WAAa5B,EACnB,OAAOjO,KAAK6e,cAGhB,IAAIC,GAAgB9e,KAAK2c,OAAS7M,EAAMmB,UAAYjR,KAAK2c,MAAQ7W,EAAQ4Y,SACrEK,GAAiB/e,KAAK4c,SAAWtL,GAAYtR,KAAK4c,QAAS9M,EAAMiB,QAAUjL,EAAQ6Y,aAEvF3e,KAAK2c,MAAQ7M,EAAMmB,UACnBjR,KAAK4c,QAAU9M,EAAMiB,OAEhBgO,GAAkBD,EAGnB9e,KAAK8E,OAAS,EAFd9E,KAAK8E,MAAQ,EAKjB9E,KAAKuc,OAASzM,EAId,IAAIkP,EAAWhf,KAAK8E,MAAQgB,EAAQ2Y,KACpC,GAAiB,IAAbO,EAGA,OAAKhf,KAAKod,sBAGNpd,KAAKsc,OAASjU,GAAkB,WAC5BrI,KAAKyb,MAAQN,GACbnb,KAAKud,YACNzX,EAAQ4Y,SAAU1e,MACdgb,IANAG,GAUnB,OAAOE,IAGXwD,YAAa,WAIT,OAHA7e,KAAKsc,OAASjU,GAAkB,WAC5BrI,KAAKyb,MAAQJ,KACdrb,KAAK8F,QAAQ4Y,SAAU1e,MACnBqb,IAGXqC,MAAO,WACHc,aAAaxe,KAAKsc,SAGtB/L,KAAM,WACEvQ,KAAKyb,OAASN,KACdnb,KAAKuc,OAAOyC,SAAWhf,KAAK8E,MAC5B9E,KAAK8O,QAAQyB,KAAKvQ,KAAK8F,QAAQlC,MAAO5D,KAAKuc,YAoBvDM,GAAOoC,QAAU,QAMjBpC,GAAOtB,SAAW,CAOd2D,WAAW,EAQXhF,YAAanB,GAMb5J,QAAQ,EASRH,YAAa,KAObO,WAAY,KAOZuN,OAAQ,CAEJ,CAACN,GAAkB,CAACrN,QAAQ,IAC5B,CAACiN,GAAiB,CAACjN,QAAQ,GAAQ,CAAC,WACpC,CAACsN,GAAiB,CAAC5J,UAAWrE,KAC9B,CAACyN,GAAe,CAACpJ,UAAWrE,IAAuB,CAAC,UACpD,CAACkO,IACD,CAACA,GAAe,CAAC9Y,MAAO,YAAa6a,KAAM,GAAI,CAAC,QAChD,CAACpC,KAQL8C,SAAU,CAMNC,WAAY,OAOZC,YAAa,OASbC,aAAc,OAOdC,eAAgB,OAOhBC,SAAU,OAQVC,kBAAmB,kBAI3B,IAAIC,GAAO,EACPC,GAAc,EAQlB,SAAS5C,GAAQjQ,EAAShH,GACtB9F,KAAK8F,QAAUC,EAAO,GAAI8W,GAAOtB,SAAUzV,GAAW,IAEtD9F,KAAK8F,QAAQkJ,YAAchP,KAAK8F,QAAQkJ,aAAelC,EAEvD9M,KAAK4f,SAAW,GAChB5f,KAAKqQ,QAAU,GACfrQ,KAAKma,YAAc,GACnBna,KAAK6f,YAAc,GAEnB7f,KAAK8M,QAAUA,EACf9M,KAAK8P,MAAQT,GAAoBrP,MACjCA,KAAKka,YAAc,IAAIX,GAAYvZ,KAAMA,KAAK8F,QAAQoU,aAEtD4F,GAAe9f,MAAM,GAErB4I,EAAK5I,KAAK8F,QAAQqU,aAAa,SAAS4F,GACpC,IAAI3F,EAAapa,KAAKggB,IAAI,IAAKD,EAAK,GAAIA,EAAK,KAC7CA,EAAK,IAAM3F,EAAW4C,cAAc+C,EAAK,IACzCA,EAAK,IAAM3F,EAAW8C,eAAe6C,EAAK,MAC3C/f,MA4PP,SAAS8f,GAAehR,EAASkR,GAC7B,IAIIxe,EAJAsL,EAAUgC,EAAQhC,QACjBA,EAAQ+L,QAIbjQ,EAAKkG,EAAQhJ,QAAQqZ,UAAU,SAASle,EAAOlC,GAC3CyC,EAAO8K,EAASQ,EAAQ+L,MAAO9Z,GAC3BihB,GACAlR,EAAQ+Q,YAAYre,GAAQsL,EAAQ+L,MAAMrX,GAC1CsL,EAAQ+L,MAAMrX,GAAQP,GAEtB6L,EAAQ+L,MAAMrX,GAAQsN,EAAQ+Q,YAAYre,IAAS,MAGtDwe,IACDlR,EAAQ+Q,YAAc,KAS9B,SAASI,GAAgBrc,EAAOsc,GAC5B,IAAIC,EAAeja,EAASka,YAAY,SACxCD,EAAaE,UAAUzc,GAAO,GAAM,GACpCuc,EAAaG,QAAUJ,EACvBA,EAAK1W,OAAO+W,cAAcJ,GAtR9BpD,GAAQhf,UAAY,CAMhB6D,IAAK,SAASkE,GAaV,OAZAC,EAAO/F,KAAK8F,QAASA,GAGjBA,EAAQoU,aACRla,KAAKka,YAAYD,SAEjBnU,EAAQkJ,cAERhP,KAAK8P,MAAMgE,UACX9T,KAAK8P,MAAMtG,OAAS1D,EAAQkJ,YAC5BhP,KAAK8P,MAAMV,QAERpP,MASXwgB,KAAM,SAASC,GACXzgB,KAAKqQ,QAAQqQ,QAAUD,EAAQd,GAAcD,IASjDlP,UAAW,SAASgI,GAChB,IAAInI,EAAUrQ,KAAKqQ,QACnB,IAAIA,EAAQqQ,QAAZ,CAOA,IAAItG,EAFJpa,KAAKka,YAAYK,gBAAgB/B,GAGjC,IAAI2B,EAAcna,KAAKma,YAKnBwG,EAAgBtQ,EAAQsQ,gBAIvBA,GAAkBA,GAAiBA,EAAclF,MAAQN,MAC1DwF,EAAgBtQ,EAAQsQ,cAAgB,MAG5C,IAAI7X,EAAI,EACR,MAAOA,EAAIqR,EAAYzV,OACnB0V,EAAaD,EAAYrR,GAQrBuH,EAAQqQ,UAAYf,IACfgB,GAAiBvG,GAAcuG,IAChCvG,EAAWiD,iBAAiBsD,GAGhCvG,EAAWsD,QAFXtD,EAAW5J,UAAUgI,IAOpBmI,GAAiBvG,EAAWqB,OAAST,GAAcC,GAAgBC,MACpEyF,EAAgBtQ,EAAQsQ,cAAgBvG,GAE5CtR,MASRnH,IAAK,SAASyY,GACV,GAAIA,aAAsBkB,GACtB,OAAOlB,EAIX,IADA,IAAID,EAAcna,KAAKma,YACdrR,EAAI,EAAGA,EAAIqR,EAAYzV,OAAQoE,IACpC,GAAIqR,EAAYrR,GAAGhD,QAAQlC,OAASwW,EAChC,OAAOD,EAAYrR,GAG3B,OAAO,MASXkX,IAAK,SAAS5F,GACV,GAAI3R,EAAe2R,EAAY,MAAOpa,MAClC,OAAOA,KAIX,IAAI4gB,EAAW5gB,KAAK2B,IAAIyY,EAAWtU,QAAQlC,OAS3C,OARIgd,GACA5gB,KAAK6gB,OAAOD,GAGhB5gB,KAAKma,YAAYjV,KAAKkV,GACtBA,EAAWtL,QAAU9O,KAErBA,KAAKka,YAAYD,SACVG,GAQXyG,OAAQ,SAASzG,GACb,GAAI3R,EAAe2R,EAAY,SAAUpa,MACrC,OAAOA,KAMX,GAHAoa,EAAapa,KAAK2B,IAAIyY,GAGlBA,EAAY,CACZ,IAAID,EAAcna,KAAKma,YACnBhY,EAAQ0J,EAAQsO,EAAaC,IAElB,IAAXjY,IACAgY,EAAYpE,OAAO5T,EAAO,GAC1BnC,KAAKka,YAAYD,UAIzB,OAAOja,MASX8gB,GAAI,SAASC,EAAQlW,GACjB,GAAIkW,IAAW5b,GAGX0F,IAAY1F,EAAhB,CAIA,IAAIya,EAAW5f,KAAK4f,SAKpB,OAJAhX,EAAKkC,EAASiW,IAAS,SAASnd,GAC5Bgc,EAAShc,GAASgc,EAAShc,IAAU,GACrCgc,EAAShc,GAAOsB,KAAK2F,MAElB7K,OASXghB,IAAK,SAASD,EAAQlW,GAClB,GAAIkW,IAAW5b,EAAf,CAIA,IAAIya,EAAW5f,KAAK4f,SAQpB,OAPAhX,EAAKkC,EAASiW,IAAS,SAASnd,GACvBiH,EAGD+U,EAAShc,IAAUgc,EAAShc,GAAOmS,OAAOlK,EAAQ+T,EAAShc,GAAQiH,GAAU,UAFtE+U,EAAShc,MAKjB5D,OAQXuQ,KAAM,SAAS3M,EAAOsc,GAEdlgB,KAAK8F,QAAQoZ,WACbe,GAAgBrc,EAAOsc,GAI3B,IAAIN,EAAW5f,KAAK4f,SAAShc,IAAU5D,KAAK4f,SAAShc,GAAO5F,QAC5D,GAAK4hB,GAAaA,EAASlb,OAA3B,CAIAwb,EAAKnV,KAAOnH,EACZsc,EAAKzF,eAAiB,WAClByF,EAAK5N,SAASmI,kBAGlB,IAAI3R,EAAI,EACR,MAAOA,EAAI8W,EAASlb,OAChBkb,EAAS9W,GAAGoX,GACZpX,MAQRgL,QAAS,WACL9T,KAAK8M,SAAWgT,GAAe9f,MAAM,GAErCA,KAAK4f,SAAW,GAChB5f,KAAKqQ,QAAU,GACfrQ,KAAK8P,MAAMgE,UACX9T,KAAK8M,QAAU,OAyCvB/G,EAAO8W,GAAQ,CACX9O,YAAaA,EACbC,WAAYA,EACZC,UAAWA,EACXC,aAAcA,EAEd6M,eAAgBA,GAChBC,YAAaA,GACbC,cAAeA,GACfC,YAAaA,GACbC,iBAAkBA,GAClBC,gBAAiBA,GACjBC,aAAcA,GAEdlN,eAAgBA,EAChBC,eAAgBA,EAChBC,gBAAiBA,EACjBC,aAAcA,EACdC,eAAgBA,GAChBC,qBAAsBA,GACtBC,mBAAoBA,GACpBC,cAAeA,GAEfqO,QAASA,GACTlO,MAAOA,GACP0K,YAAaA,GAEb9J,WAAYA,GACZE,WAAYA,GACZH,kBAAmBA,GACnBE,gBAAiBA,GACjB6G,iBAAkBA,GAElB+E,WAAYA,GACZU,eAAgBA,GAChBiF,IAAKvE,GACLwE,IAAKjF,GACLkF,MAAO1E,GACP2E,MAAOhF,GACPiF,OAAQ7E,GACR8E,MAAOjF,GAEPyE,GAAInW,EACJqW,IAAK/V,EACLrC,KAAMA,EACNkB,MAAOA,EACPF,OAAQA,EACR7D,OAAQA,EACRiE,QAASA,EACTxB,OAAQA,EACR8D,SAAUA,IAKd,IAAIiV,GAAgC,qBAAXtb,EAAyBA,EAA0B,qBAAT8I,KAAuBA,KAAO,GACjGwS,GAAW1E,OAASA,GAGhB,aACI,OAAOA,IACV,oCAtkFL,CA6kFG5W,OAAQC","file":"js/chunk-vendors~1f20a385.c992593a.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","// Defaults\nvar defaultOptions = {\n\tformat: 'image/png',\n\tquality: 0.92,\n\twidth: undefined,\n\theight: undefined,\n\tCanvas: undefined,\n\tcrossOrigin: undefined\n};\n\n// Return Promise\nvar mergeImages = function (sources, options) {\n\tif ( sources === void 0 ) sources = [];\n\tif ( options === void 0 ) options = {};\n\n\treturn new Promise(function (resolve) {\n\toptions = Object.assign({}, defaultOptions, options);\n\n\t// Setup browser/Node.js specific variables\n\tvar canvas = options.Canvas ? new options.Canvas() : window.document.createElement('canvas');\n\tvar Image = options.Canvas ? options.Canvas.Image : window.Image;\n\tif (options.Canvas) {\n\t\toptions.quality *= 100;\n\t}\n\n\t// Load sources\n\tvar images = sources.map(function (source) { return new Promise(function (resolve, reject) {\n\t\t// Convert sources to objects\n\t\tif (source.constructor.name !== 'Object') {\n\t\t\tsource = { src: source };\n\t\t}\n\n\t\t// Resolve source and img when loaded\n\t\tvar img = new Image();\n\t\timg.crossOrigin = options.crossOrigin;\n\t\timg.onerror = function () { return reject(new Error('Couldn\\'t load image')); };\n\t\timg.onload = function () { return resolve(Object.assign({}, source, { img: img })); };\n\t\timg.src = source.src;\n\t}); });\n\n\t// Get canvas context\n\tvar ctx = canvas.getContext('2d');\n\n\t// When sources have loaded\n\tresolve(Promise.all(images)\n\t\t.then(function (images) {\n\t\t\t// Set canvas dimensions\n\t\t\tvar getSize = function (dim) { return options[dim] || Math.max.apply(Math, images.map(function (image) { return image.img[dim]; })); };\n\t\t\tcanvas.width = getSize('width');\n\t\t\tcanvas.height = getSize('height');\n\n\t\t\t// Draw images to canvas\n\t\t\timages.forEach(function (image) {\n\t\t\t\tctx.globalAlpha = image.opacity ? image.opacity : 1;\n\t\t\t\treturn ctx.drawImage(image.img, image.x || 0, image.y || 0);\n\t\t\t});\n\n\t\t\tif (options.Canvas && options.format === 'image/jpeg') {\n\t\t\t\t// Resolve data URI for node-canvas jpeg async\n\t\t\t\treturn new Promise(function (resolve) {\n\t\t\t\t\tcanvas.toDataURL(options.format, {\n\t\t\t\t\t\tquality: options.quality,\n\t\t\t\t\t\tprogressive: false\n\t\t\t\t\t}, function (err, jpeg) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresolve(jpeg);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Resolve all other data URIs sync\n\t\t\treturn canvas.toDataURL(options.format, options.quality);\n\t\t}));\n});\n};\n\nexport default mergeImages;\n//# sourceMappingURL=index.es2015.js.map\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}